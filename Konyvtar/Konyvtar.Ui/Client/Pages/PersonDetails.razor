@page "/details/{id:int}"
@inject IPersonService PersonService
@inject NavigationManager NavigationManager

@if (Person is not null)
{
    <h3>@Person.Name's Details</h3>
             
    <PersonForm Person="Person" ButtonTitle="Update Person" OnValidSubmit="UpdatePerson" />
    
    <button class="btn btn-danger form-control mt-3" @onclick="DeletePerson">Delete Person</button>
}
else if (!_isFound)
{
    <p>Person with id '@Id' is not found!</p>
}
else
{
    <p>Loading...</p>
}


@code {

    private bool _isFound = true;
    
    [Parameter]
    public int Id { get; set; }

    private Person? Person { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Person = await PersonService.GetPersonByIdAsync(Id);
        }
        catch
        {
            _isFound = false;
        }
    }

    private async Task UpdatePerson()
    {
        await PersonService.UpdatePersonAsync(Id, Person);
        NavigationManager.NavigateTo("list");
    }

    private async Task DeletePerson()
    {
        await PersonService.DeletePersonAsync(Id);
        NavigationManager.NavigateTo("list");
    }
}